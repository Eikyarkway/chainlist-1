{"version":3,"file":"component---src-pages-chain-chain-chain-id-tsx-ad3244bf69570b781dd4.js","mappings":"+PASIA,GAAU,QAAW,SAAkBC,EAAOC,GAChD,MAAM,gBACJC,EAAe,kBACfC,EAAiB,eACjBC,EAAc,iBACdC,EAAgB,YAChBC,EAAW,YACXC,EAAW,YACXC,KACGC,IACD,QAAe,UAAWT,IACxB,UACJU,EAAS,YACTC,EAAc,aAAY,MAC1BC,KACGC,IACD,QAAiBb,GACfc,EAAgB,CACpBC,SAAU,CACRb,gBAAiBA,GAAmBG,GAAoBC,GAAe,MACvEU,OAAQ,QAEVC,WAAY,CACVd,kBAAmBA,GAAqBC,GAAkBE,GAAe,MACzEY,MAAO,SAGX,OAAuB,IAAAC,KACrB,IAAOC,GACP,CACEnB,MACA,mBAAoBU,KACjBE,EACHD,MAAO,IACFH,EACHY,OAAQ,IACRb,cACAD,iBACGO,EAAcH,MACdC,GAELF,WAAW,IAAAY,IAAG,iBAAkBZ,IAGtC,IACAX,EAAQwB,YAAc,U,oFCnDlBC,GAAmB,E,QAAA,GAAW,CAChCD,YAAa,mBACbE,MAAsB,IAAAC,MAAK,IAAK,CAAEC,KAAM,OAAQC,OAAQ,eAAgBC,cAAe,QAASC,YAAa,IAAKC,SAAU,EAC1G,IAAAZ,KAAI,OAAQ,CAAEa,EAAG,8DACjB,IAAAb,KAAI,OAAQ,CAAEa,EAAG,eACjB,IAAAb,KAAI,OAAQ,CAAEa,EAAG,qB,oBCJ9B,MAAMC,EAAeC,IAAA,IAAC,KAAEC,EAAI,SAAEJ,GAAUG,EAAA,OAC7CE,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAACF,KAAMA,EAAMG,YAAU,GACzBP,EAAS,KAACK,EAAAA,EAAAA,GAACZ,EAAgB,CAACe,GAAG,QAC3B,ECHT,IAAIC,GAAiB,QACnB,CAACxC,EAAOC,KACN,IAAIwC,EACJ,MAAM,SAAEC,EAAQ,UAAEC,EAAS,UAAEjC,KAAcG,GAASb,EACpD,OAAuB,IAAAmB,KACrB,IAAOyB,IACP,CACE3C,MACAS,WAAW,IAAAY,IAAG,0BAA2BZ,MACtCG,EACHD,MAAO,CACLiC,QAAS,QACTC,WAAY,SACZC,wBAAyB,QACzBJ,UAA6D,OAAjDF,EAAiB,MAAZC,EAAmBA,EAAWC,GAAqBF,EAAK,OACzEO,UAAW,SACXC,SAAU,SAGf,I,SCbAC,EAAqBC,IAAkB,OAAc,CACxDC,KAAM,qBACNC,aAAc,sGAEZC,GAAQ,QAAW,CAACtD,EAAOC,KAC7B,MAAMQ,GAAS,QAAoB,QAAST,IACtC,UAAEU,EAAS,OAAE6C,KAAWC,IAAe,QAAiBxD,GAC9D,OAAuB,IAAAmB,KAAI+B,EAAqB,CAAEO,MAAOhD,EAAQsB,UAA0B,IAAAZ,KACzF,IAAOuC,MACP,CACEzD,MACAW,MAAO,CAAE+C,YAAaJ,KAAW9C,EAAOiD,OACxChD,WAAW,IAAAY,IAAG,eAAgBZ,MAC3B8C,KAEH,IAENF,EAAM/B,YAAc,QCpBpB,IAAIqC,GAAQ,QAAW,CAAC5D,EAAOC,KAC7B,MAAMQ,EAAS0C,IACf,OAAuB,IAAAhC,KAAI,IAAO0C,MAAO,IAAK7D,EAAOC,MAAKW,MAAOH,EAAOoD,OAAQ,ICF9EC,GAAK,QAAW,CAAC9D,EAAOC,KAC1B,MAAMQ,EAAS0C,IACf,OAAuB,IAAAhC,KAAI,IAAO4C,GAAI,IAAK/D,EAAOC,MAAKW,MAAOH,EAAOsD,IAAK,ICFxEC,GAAK,QACP,EAAGC,eAAcpD,GAAQZ,KACvB,MAAMQ,EAAS0C,IACf,OAAuB,IAAAhC,KACrB,IAAO+C,GACP,IACKrD,EACHZ,MACAW,MAAOH,EAAOyD,GACd,kBAAmBD,GAEtB,ICXDE,GAAQ,QAAW,CAACnE,EAAOC,KAC7B,MAAMQ,EAAS0C,IACf,OAAuB,IAAAhC,KAAI,IAAOiD,MAAO,IAAKpE,EAAOC,MAAKW,MAAOH,EAAO2D,OAAQ,ICF9EC,GAAK,QACP,EAAGJ,eAAcpD,GAAQZ,KACvB,MAAMQ,EAAS0C,IACf,OAAuB,IAAAhC,KACrB,IAAOmD,GACP,IACKzD,EACHZ,MACAW,MAAOH,EAAO6D,GACd,kBAAmBL,GAEtB,ICLE,MAAMM,EAAWrC,IAA+B,IAA9B,KAAEsC,EAAI,eAAEC,GAAgBvC,EAC/C,MAAM,YAAEwC,EAAW,cAAEC,IAAkBC,EAAAA,EAAAA,YAAWC,EAAAA,GAElD,OACEzC,EAAAA,EAAAA,GAACI,EAAc,MACbJ,EAAAA,EAAAA,GAACkB,EAAK,MACJlB,EAAAA,EAAAA,GAACwB,EAAK,MACJxB,EAAAA,EAAAA,GAAC0B,EAAE,MACD1B,EAAAA,EAAAA,GAAC4B,EAAE,CAACc,GAAG,KAAI,YACX1C,EAAAA,EAAAA,GAAC4B,EAAE,SAGP5B,EAAAA,EAAAA,GAAC+B,EAAK,KACHK,EAAKO,KAAKC,IACT5C,EAAAA,EAAAA,GAAC0B,EAAE,MACD1B,EAAAA,EAAAA,GAACiC,EAAE,CAACS,GAAG,KAAKE,IACZ5C,EAAAA,EAAAA,GAACiC,EAAE,CAACY,GAAG,IAAIC,UAAU,OACjBR,GAGAtC,EAAAA,EAAAA,GAAC+C,EAAAA,EAAM,CAACC,QAASA,IAAMX,EAAeO,IAAS,cAF/C5C,EAAAA,EAAAA,GAAC+C,EAAAA,EAAM,CAACC,QAAST,GAAe,iBAW7B,E,cCjCjBU,GAAQ,QAAW,SAAgBrF,EAAOC,GAC5C,MAAMQ,GAAS,QAAe,QAAST,IACjC,UAAEU,KAAcG,IAAS,QAAiBb,GAChD,OAAuB,IAAAmB,KACrB,IAAOmE,KACP,CACErF,MACAS,WAAW,IAAAY,IAAG,eAAgBtB,EAAMU,cACjCG,EACHD,MAAO,CACLiC,QAAS,eACTC,WAAY,SACZyC,cAAe,YACZ9E,IAIX,IACA4E,EAAM9D,YAAc,QCvBb,MAAMiE,EAAetD,IAAgD,IAA/C,SAAEuD,GAAuCvD,EACpE,IAAKuD,GAAgC,IAApBA,EAASC,OACxB,OAAO,KAET,MAAMC,EACY,kBAAhBF,EAAS,GACL,+BACA,8BACN,OACErD,EAAAA,EAAAA,GAACwD,EAAAA,EAAO,CAACC,MAAOF,IACdvD,EAAAA,EAAAA,GAACiD,EAAK,CAACS,YAAY,MAAMC,cAAc,cAAa,WAG5C,ECbDC,EAAc9D,IAA4C,IAA3C,OAAE+D,GAAmC/D,EAC/D,MAAMgE,EAAeD,QAAAA,EAAU,SACzBH,EAAyB,eAAXG,EAA0B,cAAWE,EACzD,OACE/D,EAAAA,EAAAA,GAACiD,EAAK,CAACU,cAAc,aAAaD,YAAaA,GAC5CI,EACK,ECPZ,IAAIE,EAAapG,IAA0B,IAAAmB,KACzC,IAAOyB,IACP,CACElC,UAAW,wBACRV,EACHY,MAAO,CACLiC,QAAS,eACTwD,KAAM,WACNC,SAAU,KACPtG,EAAa,SAItBoG,EAAU7E,YAAc,Y,4BCApBgF,GAAQ,QAAW,CAACvG,EAAOC,KAC7B,MAAM,SACJuG,EACAC,UAAWC,EAAa,MACxBC,EAAK,QACLC,EAAO,QACPC,EAAU,SAAQ,KAClBC,EAAI,SACJ/E,EAAQ,QACRgF,EAAO,UACPrG,EAAS,mBACTsG,KACGnG,GACDb,EACEyG,EAAYD,EAAW,MAAyB,MAAjBE,EAAwBA,EAAgB,SACvEO,GAAe,IAAAC,UACnB,IC9BJ,SAA0BC,GACxB,MAAM,QAAEN,EAAO,UAAEJ,GAAcU,EACzBrG,EAAgB,CACpBsG,OAAQ,CACNC,GAAIR,EACJtE,GAAI,EACJrC,gBAAiB,EACjBC,kBAAmB,OAErB,iBAAkB,CAChBkH,GAAIR,EACJtE,GAAI,EACJrC,gBAAiB,EACjBC,kBAAmB,OAErBmH,IAAK,CACH/E,GAAIsE,EACJQ,GAAI,EACJnH,gBAAiB,MACjBC,kBAAmB,GAErB,cAAe,CACboC,GAAIsE,EACJQ,GAAI,EACJnH,gBAAiB,MACjBC,kBAAmB,IAGvB,MAAO,CACL,KAAK,QACHsG,GACChD,GAAU3C,EAAc2C,KAG/B,CDJU8D,CAAiB,CAAEV,UAASJ,eAClC,CAACI,EAASJ,IAENe,IAAeT,EACfU,GAAqBT,IAAuBQ,EAC5CE,GAAS,IAAAR,UAAQ,KACrB,MAAMS,GAAgB,OAAiB5F,GACvC,OAAO0F,EAAoBE,EAAgBA,EAAc5C,KAAI,CAAC6C,EAAOC,KACnE,MAAMC,OAA2B,IAAdF,EAAME,IAAsBF,EAAME,IAAMD,EACrDE,EAASF,EAAQ,IAAMF,EAAcjC,OAErCsC,EAAShB,GADsB,IAAA7F,KAAIiF,EAAW,CAAErE,SAAU6F,GAASE,GACtBF,EACnD,IAAKJ,EACH,OAAOQ,EACT,MAAMC,GAAgB,IAAAC,cACpBnB,EACA,CACEnG,MAAOqG,IAGLkB,EAAWJ,EAAS,KAAOE,EACjC,OAAuB,IAAAvG,MAAK,EAAA0G,SAAU,CAAErG,SAAU,CAChDiG,EACAG,IACGL,EAAI,GACT,GACD,CACDf,EACAE,EACAO,EACAC,EACAT,EACAjF,IAEIsG,GAAa,IAAA/G,IAAG,eAAgBZ,GACtC,OAAuB,IAAAS,KACrB,IAAOyB,IACP,CACE3C,MACA4C,QAAS,OACTyF,WAAY3B,EACZ4B,eAAgB3B,EAChB4B,cAAe/B,EACfgC,SAAU3B,EACV4B,IAAKlB,OAAa,EAASX,EAC3BnG,UAAW2H,KACRxH,EACHkB,SAAU2F,GAEb,IAEHnB,EAAMhF,YAAc,QE5EpB,IAAIoH,GAAS,QAAW,CAAC3I,EAAOC,KAAwB,IAAAkB,KAAIoF,EAAO,CAAEI,MAAO,YAAa3G,EAAOyG,UAAW,SAAUxG,UACrH0I,EAAOpH,YAAc,SCLd,MAAMqH,EAAY1G,IAAA,IAAC,SAAEH,GAAyCG,EAAA,OACnEE,EAAAA,EAAAA,GAACuG,EAAM,CAAChC,MAAM,QAAQ+B,IAAI,KACvB3G,EACM,ECwJX,MAvIkBG,IAA8C,IAA7C,KAAE2G,GAAsC3G,EACzD,MAAM,KACJkB,EAAI,QACJ0F,EAAO,eACPC,EAAc,KACdC,EAAI,UACJC,EAAS,IACTC,EAAG,SACHzD,EAAQ,QACR0D,EAAO,OACPlD,GACE4C,EAAKO,OAEH,YAAE1E,EAAW,cAAEC,EAAa,eAAE0E,IAClCzE,EAAAA,EAAAA,YAAWC,EAAAA,GAUb,OACEzC,EAAAA,EAAAA,GAAAkH,EAAAA,SAAA,MACElH,EAAAA,EAAAA,GAACmH,EAAAA,EAAG,OACJnH,EAAAA,EAAAA,GAACoH,EAAAA,EAAM,CAACC,YAAa,CAAEC,YAAY,EAAOC,aAAa,KACrDvH,EAAAA,EAAAA,GAACwH,EAAAA,EAAI,CAACpB,cAAc,SAASqB,GAAI,CAAC,IAAK,KAAM,OAC3CzH,EAAAA,EAAAA,GAACwH,EAAAA,EAAI,CACHpB,cAAe,CAAC,SAAU,KAAM,OAChCD,eAAe,gBACfD,WAAW,SACXI,IAAI,MAEJtG,EAAAA,EAAAA,GAACwH,EAAAA,EAAI,CACHpB,cAAe,CAAC,SAAU,KAAM,OAChCF,WAAW,SACXI,IAAI,KAEHM,IACC5G,EAAAA,EAAAA,GAACwH,EAAAA,EAAI,MACHxH,EAAAA,EAAAA,GAAC0H,EAAAA,EAAS,CAAC1G,KAAMA,EAAM4F,KAAMA,EAAM9H,MAAM,WAG7CkB,EAAAA,EAAAA,GAAC2H,EAAAA,EAAO,CAACC,KAAK,OAAO5G,IAErBsB,GAGAtC,EAAAA,EAAAA,GAAC+C,EAAAA,EAAM,CAACC,QAlCQ6E,KAC1BZ,EAAe,CAAEjG,OAAM0F,UAASC,iBAAgBG,MAAKD,aAAY,GAiCjB,cAFtC7G,EAAAA,EAAAA,GAAC+C,EAAAA,EAAM,CAACC,QAAST,GAAe,aAKpCvC,EAAAA,EAAAA,GAACrC,EAAO,CAACsH,GAAG,OACZjF,EAAAA,EAAAA,GAAC8H,EAAAA,EAAS,CAAC1B,cAAe,CAAC,SAAU,KAAM,OAAQE,IAAK,CAAC,EAAG,KAAM,KAChEtG,EAAAA,EAAAA,GAAC+H,EAAAA,EAAI,MACH/H,EAAAA,EAAAA,GAACgI,EAAAA,EAAS,KAAC,aACXhI,EAAAA,EAAAA,GAACwG,EAAS,MACRxG,EAAAA,EAAAA,GAACiI,EAAAA,EAAI,KAAEvB,MAGX1G,EAAAA,EAAAA,GAAC+H,EAAAA,EAAI,MACH/H,EAAAA,EAAAA,GAACgI,EAAAA,EAAS,KAAC,aACXhI,EAAAA,EAAAA,GAACwG,EAAS,MACRxG,EAAAA,EAAAA,GAACiI,EAAAA,EAAI,KAAEtB,EAAeuB,WAG1BlI,EAAAA,EAAAA,GAAC+H,EAAAA,EAAI,MACH/H,EAAAA,EAAAA,GAACgI,EAAAA,EAAS,CAACG,GAAG,OAAM,WACpBnI,EAAAA,EAAAA,GAACwG,EAAS,MACRxG,EAAAA,EAAAA,GAAC4D,EAAW,CAACC,OAAQA,KACrB7D,EAAAA,EAAAA,GAACoD,EAAY,CAACC,SAAUA,MAG3B0D,IACC/G,EAAAA,EAAAA,GAAC+H,EAAAA,EAAI,MACH/H,EAAAA,EAAAA,GAACgI,EAAAA,EAAS,KAAC,SACXhI,EAAAA,EAAAA,GAACwG,EAAS,MACRxG,EAAAA,EAAAA,GAACH,EAAY,CAACE,KAAMgH,GAAUA,KAInCF,IACC7G,EAAAA,EAAAA,GAAC+H,EAAAA,EAAI,MACH/H,EAAAA,EAAAA,GAACgI,EAAAA,EAAS,KAAC,cACXhI,EAAAA,EAAAA,GAACwG,EAAS,KACPK,EAAUlE,KAAKyF,IACdpI,EAAAA,EAAAA,GAACH,EAAY,CAACE,KAAMqI,EAASC,KAC1BD,EAASC,WAOtBrI,EAAAA,EAAAA,GAACrC,EAAO,CAACsH,GAAG,OACZjF,EAAAA,EAAAA,GAACmC,EAAQ,CAACC,KAAM0E,EAAKzE,eA5ELyE,IACtBG,EAAe,CAAEjG,OAAM0F,UAASC,iBAAgBG,IAAK,CAACA,GAAMD,aAAY,MA8ErE,C","sources":["webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-YGVX4ESO.mjs","webpack://chainlist/./node_modules/@chakra-ui/icons/dist/chunk-C7CK4LUU.mjs","webpack://chainlist/./src/components/ExternalLink.tsx","webpack://chainlist/./node_modules/@chakra-ui/table/dist/chunk-7FCBKWFD.mjs","webpack://chainlist/./node_modules/@chakra-ui/table/dist/chunk-B3MS3L3D.mjs","webpack://chainlist/./node_modules/@chakra-ui/table/dist/chunk-DJP6PLAX.mjs","webpack://chainlist/./node_modules/@chakra-ui/table/dist/chunk-L7UVV2ML.mjs","webpack://chainlist/./node_modules/@chakra-ui/table/dist/chunk-Z3IFIKNA.mjs","webpack://chainlist/./node_modules/@chakra-ui/table/dist/chunk-D3HTYHQX.mjs","webpack://chainlist/./node_modules/@chakra-ui/table/dist/chunk-BLRPLYZO.mjs","webpack://chainlist/./src/components/RpcTable.tsx","webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-FQXH56BT.mjs","webpack://chainlist/./src/components/RedFlagBadge.tsx","webpack://chainlist/./src/components/StatusBadge.tsx","webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-AMDSPU3E.mjs","webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-WKZT7ZXJ.mjs","webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-CCJ3WTOJ.mjs","webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-QLVBORJB.mjs","webpack://chainlist/./src/components/StatValue.tsx","webpack://chainlist/./src/pages/chain/{Chain.chainId}.tsx"],"sourcesContent":["// src/divider.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = forwardRef(function Divider2(props, ref) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props);\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props);\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    chakra.hr,\n    {\n      ref,\n      \"aria-orientation\": orientation,\n      ...rest,\n      __css: {\n        ...styles,\n        border: \"0\",\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css\n      },\n      className: cx(\"chakra-divider\", className)\n    }\n  );\n});\nDivider.displayName = \"Divider\";\n\nexport {\n  Divider\n};\n","// src/ExternalLink.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ExternalLinkIcon = createIcon({\n  displayName: \"ExternalLinkIcon\",\n  path: /* @__PURE__ */ jsxs(\"g\", { fill: \"none\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeWidth: \"2\", children: [\n    /* @__PURE__ */ jsx(\"path\", { d: \"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\" }),\n    /* @__PURE__ */ jsx(\"path\", { d: \"M15 3h6v6\" }),\n    /* @__PURE__ */ jsx(\"path\", { d: \"M10 14L21 3\" })\n  ] })\n});\n\nexport {\n  ExternalLinkIcon\n};\n","import React from \"react\";\nimport { ExternalLinkIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"@chakra-ui/react\";\n\nexport const ExternalLink = ({ href, children }) => (\n  <Link href={href} isExternal>\n    {children} <ExternalLinkIcon mx=\"2px\" />\n  </Link>\n);\n","// src/table-container.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableContainer = forwardRef(\n  (props, ref) => {\n    var _a;\n    const { overflow, overflowX, className, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-table__container\", className),\n        ...rest,\n        __css: {\n          display: \"block\",\n          whiteSpace: \"nowrap\",\n          WebkitOverflowScrolling: \"touch\",\n          overflowX: (_a = overflow != null ? overflow : overflowX) != null ? _a : \"auto\",\n          overflowY: \"hidden\",\n          maxWidth: \"100%\"\n        }\n      }\n    );\n  }\n);\n\nexport {\n  TableContainer\n};\n","// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, layout, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(TableStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.table,\n    {\n      ref,\n      __css: { tableLayout: layout, ...styles.table },\n      className: cx(\"chakra-table\", className),\n      ...tableProps\n    }\n  ) });\n});\nTable.displayName = \"Table\";\n\nexport {\n  useTableStyles,\n  Table\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/thead.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Thead = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.thead, { ...props, ref, __css: styles.thead });\n});\n\nexport {\n  Thead\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tr.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tr = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tr, { ...props, ref, __css: styles.tr });\n});\n\nexport {\n  Tr\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/th.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Th = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.th,\n      {\n        ...rest,\n        ref,\n        __css: styles.th,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Th\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tbody.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tbody = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tbody, { ...props, ref, __css: styles.tbody });\n});\n\nexport {\n  Tbody\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/td.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Td = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.td,\n      {\n        ...rest,\n        ref,\n        __css: styles.td,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Td\n};\n","import React, { useContext } from \"react\";\nimport {\n  Button,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@chakra-ui/react\";\nimport { Web3Context } from \"../context/Web3Context\";\n\nexport const RpcTable = ({ rpcs, handleRpcClick }) => {\n  const { isConnected, handleConnect } = useContext(Web3Context);\n\n  return (\n    <TableContainer>\n      <Table>\n        <Thead>\n          <Tr>\n            <Th pl=\"0\">RPC URL</Th>\n            <Th></Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {rpcs.map((rpcUrl) => (\n            <Tr>\n              <Td pl=\"0\">{rpcUrl}</Td>\n              <Td pr=\"0\" textAlign=\"end\">\n                {!isConnected ? (\n                  <Button onClick={handleConnect}>Connect</Button>\n                ) : (\n                  <Button onClick={() => handleRpcClick(rpcUrl)}>\n                    Add Chain\n                  </Button>\n                )}\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n};\n","// src/badge.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Badge = forwardRef(function Badge2(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      className: cx(\"chakra-badge\", props.className),\n      ...rest,\n      __css: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles\n      }\n    }\n  );\n});\nBadge.displayName = \"Badge\";\n\nexport {\n  Badge\n};\n","import React from \"react\";\nimport { Badge, Tooltip } from \"@chakra-ui/react\";\nimport { ChainData } from \"../types/chain\";\n\nexport const RedFlagBadge = ({ redFlags }: Pick<ChainData, \"redFlags\">) => {\n  if (!redFlags || redFlags.length === 0) {\n    return null;\n  }\n  const flagLabel =\n    redFlags[0] === \"reusedChainId\"\n      ? \"Flagged for reusing chain ID\"\n      : \"Flagged for unknown reasons\";\n  return (\n    <Tooltip label={flagLabel}>\n      <Badge colorScheme=\"red\" textTransform=\"capitalize\">\n        Flagged\n      </Badge>\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { Badge } from \"@chakra-ui/react\";\nimport { ChainData } from \"../types/chain\";\n\nexport const StatusBadge = ({ status }: Pick<ChainData, \"status\">) => {\n  const actualStatus = status ?? \"Active\";\n  const colorScheme = status === \"deprecated\" ? \"yellow\" : undefined;\n  return (\n    <Badge textTransform=\"capitalize\" colorScheme={colorScheme}>\n      {actualStatus}\n    </Badge>\n  );\n};\n","// src/stack/stack-item.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StackItem = (props) => /* @__PURE__ */ jsx(\n  chakra.div,\n  {\n    className: \"chakra-stack__item\",\n    ...props,\n    __css: {\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"]\n    }\n  }\n);\nStackItem.displayName = \"StackItem\";\n\nexport {\n  StackItem\n};\n","import {\n  StackItem\n} from \"./chunk-AMDSPU3E.mjs\";\nimport {\n  getDividerStyles\n} from \"./chunk-CCJ3WTOJ.mjs\";\n\n// src/stack/stack.tsx\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cloneElement, Fragment, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction]\n  );\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */ jsx(StackItem, { children: child }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider)\n        return _child;\n      const clonedDivider = cloneElement(\n        divider,\n        {\n          __css: dividerStyle\n        }\n      );\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */ jsxs(Fragment, { children: [\n        _child,\n        _divider\n      ] }, key);\n    });\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children\n  ]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      display: \"flex\",\n      alignItems: align,\n      justifyContent: justify,\n      flexDirection: direction,\n      flexWrap: wrap,\n      gap: hasDivider ? void 0 : spacing,\n      className: _className,\n      ...rest,\n      children: clones\n    }\n  );\n});\nStack.displayName = \"Stack\";\n\nexport {\n  Stack\n};\n","// src/stack/stack.utils.tsx\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nfunction getDividerStyles(options) {\n  const { spacing, direction } = options;\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value) => dividerStyles[value]\n    )\n  };\n}\n\nexport {\n  getDividerStyles\n};\n","import {\n  Stack\n} from \"./chunk-WKZT7ZXJ.mjs\";\n\n// src/stack/v-stack.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar VStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"column\", ref }));\nVStack.displayName = \"VStack\";\n\nexport {\n  VStack\n};\n","import React from \"react\";\nimport { VStack } from \"@chakra-ui/react\";\n\nexport const StatValue = ({ children }: { children: React.ReactNode }) => (\n  <VStack align=\"start\" gap=\"1\">\n    {children}\n  </VStack>\n);\n","import React, { useContext } from \"react\";\nimport {\n  Button,\n  Flex,\n  StatGroup,\n  StatLabel,\n  Stat,\n  Heading,\n  Divider,\n  Text,\n} from \"@chakra-ui/react\";\nimport { graphql } from \"gatsby\";\nimport { Seo } from \"../../components/SEO\";\nimport { Web3Context } from \"../../context/Web3Context\";\nimport { ChainIcon } from \"../../components/ChainIcon\";\nimport { Layout } from \"../../components/Layout\";\nimport { ExternalLink } from \"../../components/ExternalLink\";\nimport { RpcTable } from \"../../components/RpcTable\";\nimport { RedFlagBadge } from \"../../components/RedFlagBadge\";\nimport { StatusBadge } from \"../../components/StatusBadge\";\nimport { StatValue } from \"../../components/StatValue\";\nimport { ChainData } from \"../../types/chain\";\n\nconst ChainPage = ({ data }: { data: { chain: ChainData } }) => {\n  const {\n    name,\n    chainId,\n    nativeCurrency,\n    icon,\n    explorers,\n    rpc,\n    redFlags,\n    infoURL,\n    status,\n  } = data.chain;\n\n  const { isConnected, handleConnect, handleAddChain } =\n    useContext(Web3Context);\n\n  const handleAddChainClick = () => {\n    handleAddChain({ name, chainId, nativeCurrency, rpc, explorers });\n  };\n\n  const handleRpcClick = (rpc: string) => {\n    handleAddChain({ name, chainId, nativeCurrency, rpc: [rpc], explorers });\n  };\n\n  return (\n    <>\n      <Seo />\n      <Layout headerProps={{ showSearch: false, showFilters: false }}>\n        <Flex flexDirection=\"column\" mt={[\"0\", null, \"8\"]}>\n          <Flex\n            flexDirection={[\"column\", null, \"row\"]}\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            gap=\"6\"\n          >\n            <Flex\n              flexDirection={[\"column\", null, \"row\"]}\n              alignItems=\"center\"\n              gap=\"6\"\n            >\n              {icon && (\n                <Flex>\n                  <ChainIcon name={name} icon={icon} width=\"60px\" />\n                </Flex>\n              )}\n              <Heading size=\"2xl\">{name}</Heading>\n            </Flex>\n            {!isConnected ? (\n              <Button onClick={handleConnect}>Connect</Button>\n            ) : (\n              <Button onClick={handleAddChainClick}>Add Chain</Button>\n            )}\n          </Flex>\n          <Divider my=\"8\" />\n          <StatGroup flexDirection={[\"column\", null, \"row\"]} gap={[2, null, 0]}>\n            <Stat>\n              <StatLabel>Chain ID</StatLabel>\n              <StatValue>\n                <Text>{chainId}</Text>\n              </StatValue>\n            </Stat>\n            <Stat>\n              <StatLabel>Currency</StatLabel>\n              <StatValue>\n                <Text>{nativeCurrency.symbol}</Text>\n              </StatValue>\n            </Stat>\n            <Stat>\n              <StatLabel mb=\"1.5\">Status</StatLabel>\n              <StatValue>\n                <StatusBadge status={status} />\n                <RedFlagBadge redFlags={redFlags} />\n              </StatValue>\n            </Stat>\n            {infoURL && (\n              <Stat>\n                <StatLabel>Info</StatLabel>\n                <StatValue>\n                  <ExternalLink href={infoURL}>{infoURL}</ExternalLink>\n                </StatValue>\n              </Stat>\n            )}\n            {explorers && (\n              <Stat>\n                <StatLabel>Explorers</StatLabel>\n                <StatValue>\n                  {explorers.map((explorer) => (\n                    <ExternalLink href={explorer.url}>\n                      {explorer.url}\n                    </ExternalLink>\n                  ))}\n                </StatValue>\n              </Stat>\n            )}\n          </StatGroup>\n          <Divider my=\"8\" />\n          <RpcTable rpcs={rpc} handleRpcClick={handleRpcClick} />\n        </Flex>\n      </Layout>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query ($id: String) {\n    chain(id: { eq: $id }) {\n      id\n      name\n      chain\n      chainId\n      rpc\n      icon {\n        publicURL\n        childImageSharp {\n          gatsbyImageData(width: 60, placeholder: NONE)\n        }\n      }\n      nativeCurrency {\n        decimals\n        name\n        symbol\n      }\n      explorers {\n        url\n        name\n        standard\n      }\n      status\n      faucets\n      redFlags\n      infoURL\n    }\n  }\n`;\n\nexport default ChainPage;\n"],"names":["Divider","props","ref","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderWidth","borderStyle","borderColor","styles","className","orientation","__css","rest","dividerStyles","vertical","height","horizontal","width","jsx","hr","border","cx","displayName","ExternalLinkIcon","path","jsxs","fill","stroke","strokeLinecap","strokeWidth","children","d","ExternalLink","_ref","href","___EmotionJSX","Link","isExternal","mx","TableContainer","_a","overflow","overflowX","div","display","whiteSpace","WebkitOverflowScrolling","overflowY","maxWidth","TableStylesProvider","useTableStyles","name","errorMessage","Table","layout","tableProps","value","table","tableLayout","Thead","thead","Tr","tr","Th","isNumeric","th","Tbody","tbody","Td","td","RpcTable","rpcs","handleRpcClick","isConnected","handleConnect","useContext","Web3Context","pl","map","rpcUrl","pr","textAlign","Button","onClick","Badge","span","verticalAlign","RedFlagBadge","redFlags","length","flagLabel","Tooltip","label","colorScheme","textTransform","StatusBadge","status","actualStatus","undefined","StackItem","flex","minWidth","Stack","isInline","direction","directionProp","align","justify","spacing","wrap","divider","shouldWrapChildren","dividerStyle","useMemo","options","column","my","row","getDividerStyles","hasDivider","shouldUseChildren","clones","validChildren","child","index","key","isLast","_child","clonedDivider","cloneElement","_divider","Fragment","_className","alignItems","justifyContent","flexDirection","flexWrap","gap","VStack","StatValue","data","chainId","nativeCurrency","icon","explorers","rpc","infoURL","chain","handleAddChain","React","Seo","Layout","headerProps","showSearch","showFilters","Flex","mt","ChainIcon","Heading","size","handleAddChainClick","StatGroup","Stat","StatLabel","Text","symbol","mb","explorer","url"],"sourceRoot":""}